#pragma kernel Init
#pragma kernel Update
#pragma kernel Emit

#include "./ParticleCommon.cginc"

RWStructuredBuffer<Particle> _Particles;

AppendStructuredBuffer<uint> _Dead;
ConsumeStructuredBuffer<uint> _Pool;
AppendStructuredBuffer<uint> _Alive;

StructuredBuffer<float4> _Uploads;

float _DT;

int _EmitCount;
float _LifeTime;

[numthreads(16,1,1)]
void Init (uint3 id : SV_DispatchThreadID)
{
	uint idx = id.x;
	_Particles[idx].alive = false;
	_Dead.Append(idx);
}

[numthreads(16,1,1)]
void Update (uint3 id : SV_DispatchThreadID)
{
	uint idx = id.x;
	Particle p = _Particles[idx];
	if (p.alive) {
		p.life.x += _DT;
		if (p.life.x > p.life.y){
			p.alive = false;
			_Dead.Append(idx);
		} else {
			_Alive.Append(idx);
		}
		_Particles[idx] = p;
	}
}

[numthreads(16,1,1)]
void Emit (uint3 id : SV_DispatchThreadID)
{
	uint idx = id.x;
	if (idx < _EmitCount) {
		float4 upload = _Uploads[idx];
		idx = _Pool.Consume();
		Particle p = _Particles[idx];
		p.alive = true;
		p.position = upload.xy;
		p.velocity = upload.zw;
		p.life = float2(0, _LifeTime);
		_Particles[idx] = p;
	}
}